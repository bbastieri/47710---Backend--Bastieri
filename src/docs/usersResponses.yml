components:
  schema:
    Users:
      User:
        type: object
        properties:
          firsName:
            type: string
            description: User name
          lastName:
            type: string
            description: User last name
          email:
            type: string
            description: User email
          age:
            type: number
            description: User age
          password:
            type: string
            description: User password
          cart:
            type: string
            description: User cart
          role:
            type: string
            description: User role
          githubUser:
            type: boolean
            description: Github authenticated
          prodCreator:
            type: boolean
            description: Can user create products
        example:
          firstName: "User name example"
          lastName: "User last name example"
          email: "a@gmail.com"
          age: 23
          password: "123"
          cart: "sakdjhaskjdhkasda"
          role: "user"
          githubUser: false
          prodCreator: false
 
      UserDto:
        type: object
        properties:
          name:
            type: string
            description: User name
          lastname:
            type: string
            description: User last name
          id:
            type: string
            description: User ID
          email:
            type: string
            description: User email
          cart:
            type: string
            description: User cart
          role:
            type: string
            description: User role
        example:
          name: User name example
          lastname: User last name example
          id: abc123
          email: a@example.com
          cart: abcdef
          role: user

      Login:
        type: object
        properties:
          message: 
            type: string
            example: " Login OK"
          acces_token:
            type: string
            description: Returns user token generated by JWT
            example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NGVkZjRkNzYwNzMxMWFhN2QyZmQxNmQiLCJmaXJzdF9uYW1lIjoicGVyY2hlcm9uIiwibGFzdF9uYW1lIjoiY2FiYWxsbyIsImVtYWlsIjoicGVyY2hlcm9uQGdtYWlsLmNvbSIsImFnZSI6MjMsImNhcnQiOiI2NGVkZjRkNzYwNzMxMWFhN2QyZmQxNmYiLCJyb2xlIjoidXNlciIsImlhdCI6MTY5MzMyMTM3NywiZXhwIjoxNjkzMzI0MDc3fQ.bjknktGB1X6Aa04aVzWCBHPcMnhGlktGpRcVMYyXUzg"

    ValidationSchemaError:
      type: object
      properties:
        message:
          type: string
          description: Validation schema error message
      example:
        message: "User schema not valid"
    NotFound:
      type: object
      properties:
        message:
          type: string
          description: Server error message
      example:
        message: "Server error"
    ErrorGetById:
      type: object
      properties:
        message:
          type: string
          description: Error message, user not found
      example:
        message: "Cannot find user with ID XXXX"
    DeleteById:
      type: object
      properties:
        message:
          type: string
          description: Success message, user by ID deleted
      example:
        message: "User deleted successfully"